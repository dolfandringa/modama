"""empty message

Revision ID: 3c28e9c94706
Revises: b710c03a8922
Create Date: 2018-09-23 16:05:18.658312

"""
from alembic import op
import sqlalchemy as sa
import geoalchemy2
import flask_appbuilder
from sqlalchemy.dialects import postgresql
from uuid import uuid1

# revision identifiers, used by Alembic.
revision = '3c28e9c94706'
down_revision = 'b710c03a8922'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('base_observation', sa.Column('device_id', sa.String(length=50), nullable=True))
    op.add_column('base_observation', sa.Column('report_id', postgresql.UUID(as_uuid=True), nullable=True))
    op.add_column('base_observation', sa.Column('reporter', sa.String(length=255), nullable=True))
    conn = op.get_bind()
    md = sa.MetaData(bind=conn)
    tab = sa.Table('base_observation', md, autoload=True)
    rows = conn.execute(sa.select([tab.c.id])).fetchall()
    for row in rows:
        conn.execute(tab.update().where(tab.c.id == row[0]).values(
            report_id=str(uuid1()), device_id='unkown'))

    op.alter_column('base_observation', 'device_id', nullable=False)
    op.alter_column('base_observation', 'report_id', nullable=False)
    op.create_unique_constraint(None, 'base_observation', ['report_id'])
    op.drop_constraint('base_observation_observer_id_fkey', 'base_observation', type_='foreignkey')
    op.drop_column('base_observation', 'observer_id')
    op.drop_index('idx_pawikan_stranding_location', table_name='pawikan_stranding')
    op.drop_index('idx_pawikan_stranding_version_location', table_name='pawikan_stranding_version')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index('idx_pawikan_stranding_version_location', 'pawikan_stranding_version', ['location'], unique=False)
    op.create_index('idx_pawikan_stranding_location', 'pawikan_stranding', ['location'], unique=False)
    op.add_column('base_observation', sa.Column('observer_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.create_foreign_key('base_observation_observer_id_fkey', 'base_observation', 'ab_user', ['observer_id'], ['id'])
    op.drop_constraint(None, 'base_observation', type_='unique')
    op.drop_column('base_observation', 'reporter')
    op.drop_column('base_observation', 'report_id')
    op.drop_column('base_observation', 'device_id')
    # ### end Alembic commands ###
